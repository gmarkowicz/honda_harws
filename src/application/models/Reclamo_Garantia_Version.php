<?php

/**
 * Reclamo_Garantia_Version
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    Honda_HARWS
 * @subpackage Doctrine
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Reclamo_Garantia_Version.php 466 2012-11-22 12:41:55Z slopez $
 */
class Reclamo_Garantia_Version extends BaseReclamo_Garantia_Version
{
	public function setUp() { 
		$this->actAs('Timestampable');
		//$this->actAs('SoftDelete');
		
		
		$this->hasOne('Reclamo_Garantia', array(
            'local' => 'reclamo_garantia_id',
            'foreign' => 'id'
        ));
		
		$this->hasOne('Reclamo_Garantia_Codigo_Sintoma', array(
            'local' => 'reclamo_garantia_codigo_sintoma_id',
            'foreign' => 'id'
        ));
		
		$this->hasOne('Reclamo_Garantia_Codigo_Defecto', array(
            'local' => 'reclamo_garantia_codigo_defecto_id',
            'foreign' => 'id'
        ));
		
		$this->hasOne('Admin as Admin_Alta', array(
            'local' => 'reclamo_garantia_version_field_admin_alta_id',
            'foreign' => 'id'
        ));
		$this->hasOne('Admin as Admin_Modifica', array(
            'local' => 'reclamo_garantia_version_field_admin_modifica_id',
            'foreign' => 'id'
        ));
		
		$this->hasOne('Reclamo_Garantia_Dtc_Estado', array(
            'local' => 'reclamo_garantia_dtc_estado_id',
            'foreign' => 'id'
        ));
		
		$this->hasMany('Reclamo_Garantia_Version_Trabajo_Tercero', array(
            'local' => 'id',
            'foreign' => 'reclamo_garantia_version_id'
        ));
		
		$this->hasMany('Reclamo_Garantia_Frt', array(
            'local' => 'id',
            'foreign' => 'reclamo_garantia_version_id'
        ));
		$this->hasOne('Reclamo_Garantia_Material as Reclamo_Garantia_Material_Principal', array(
            'local' => 'id',
            'foreign' => 'reclamo_garantia_version_id'
        ));
		$this->hasMany('Reclamo_Garantia_Material as Reclamo_Garantia_Material_Secundario', array(
            'local' => 'id',
            'foreign' => 'reclamo_garantia_version_id'
        ));
		
		$this->hasMany('Reclamo_Garantia_Version_Adjunto_Transporte', array(
            'local' => 'id',
            'foreign' => 'reclamo_garantia_version_id',
            )
        );
		$this->hasMany('Reclamo_Garantia_Version_Adjunto_Rth', array(
            'local' => 'id',
            'foreign' => 'reclamo_garantia_version_id',
            )
        );
		$this->hasMany('Reclamo_Garantia_Version_Adjunto_Trabajo_Tercero', array(
            'local' => 'id',
            'foreign' => 'reclamo_garantia_version_id',
            )
        );
		
	}
	
	//-------------------------------------
	
	public function get_all()
	{
		
		$query = Doctrine_Query::create();
		$query->from(get_class($this) . ' ' . strtoupper(get_class($this)) . ' ');
		$query->leftJoin('RECLAMO_GARANTIA_VERSION.Reclamo_Garantia_Dtc_Estado RECLAMO_GARANTIA_DTC_ESTADO');
		$query->leftJoin('RECLAMO_GARANTIA_VERSION.Reclamo_Garantia_Codigo_Sintoma RECLAMO_GARANTIA_CODIGO_SINTOMA');
		$query->leftJoin('RECLAMO_GARANTIA_VERSION.Reclamo_Garantia_Codigo_Defecto RECLAMO_GARANTIA_CODIGO_DEFECTO');
		$query->leftJoin('RECLAMO_GARANTIA_VERSION.Reclamo_Garantia_Version_Trabajo_Tercero MANY_RECLAMO_GARANTIA_VERSION_TRABAJO_TERCERO');
		
		$query->leftJoin('RECLAMO_GARANTIA_VERSION.Reclamo_Garantia_Frt RECLAMO_GARANTIA_FRT');
		$query->leftJoin('RECLAMO_GARANTIA_VERSION.Reclamo_Garantia_Material_Principal RECLAMO_GARANTIA_MATERIAL_PRINCIPAL ON RECLAMO_GARANTIA_VERSION.id = RECLAMO_GARANTIA_MATERIAL_PRINCIPAL.reclamo_garantia_version_id AND RECLAMO_GARANTIA_MATERIAL_PRINCIPAL.reclamo_garantia_material_field_material_principal = 1');
		$query->leftJoin('RECLAMO_GARANTIA_VERSION.Reclamo_Garantia_Material_Secundario RECLAMO_GARANTIA_MATERIAL_SECUNDARIO ON RECLAMO_GARANTIA_VERSION.id = RECLAMO_GARANTIA_MATERIAL_SECUNDARIO.reclamo_garantia_version_id AND RECLAMO_GARANTIA_MATERIAL_SECUNDARIO.reclamo_garantia_material_field_material_principal != 1');
		
		$query->where("1 = 1");
		return $query;
	}
}