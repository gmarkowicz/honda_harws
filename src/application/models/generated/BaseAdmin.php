<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Admin', 'harws2');

/**
 * BaseAdmin
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $admin_field_usuario
 * @property string $admin_field_password
 * @property string $admin_field_nombre
 * @property string $admin_field_apellido
 * @property string $admin_field_email
 * @property string $admin_field_telefono_celular
 * @property string $admin_field_dni
 * @property string $admin_field_direccion
 * @property string $admin_field_idioma
 * @property string $admin_field_estudios
 * @property integer $provincia_id
 * @property integer $ciudad_id
 * @property date $admin_field_fecha_ingreso
 * @property date $admin_field_fecha_egreso
 * @property date $admin_field_fecha_nacimiento
 * @property timestamp $admin_field_fechahora_ultimo_login
 * @property timestamp $admin_field_fechahora_ultima_actividad
 * @property integer $sucursal_id
 * @property integer $admin_estado_id
 * @property enum $admin_field_super_admin
 * @property string $token
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property timestamp $deleted_at
 * @property Provincia $Provincia
 * @property Ciudad $Ciudad
 * @property Doctrine_Collection $Boutique_Producto
 * @property Doctrine_Collection $Comunicacion_Evento
 * @property Doctrine_Collection $Comunicacion_Multimedia
 * @property Doctrine_Collection $Comunicacion_Folleto
 * @property Doctrine_Collection $Comunicacion_Logo
 * @property Doctrine_Collection $Comunicacion_Aviso
 * @property Doctrine_Collection $Comunicacion_Papeleria
 * @property Tsi_Promocion $Tsi_Promocion
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: BaseAdmin.php 989 2013-03-28 14:34:51Z slopez $
 */
abstract class BaseAdmin extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('admin');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('admin_field_usuario', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '255',
             ));
        $this->hasColumn('admin_field_password', 'string', 32, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '32',
             ));
        $this->hasColumn('admin_field_nombre', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '255',
             ));
        $this->hasColumn('admin_field_apellido', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '255',
             ));
        $this->hasColumn('admin_field_email', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '255',
             ));
        $this->hasColumn('admin_field_telefono_celular', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '255',
             ));
        $this->hasColumn('admin_field_dni', 'string', 32, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '32',
             ));
        $this->hasColumn('admin_field_direccion', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '255',
             ));
        $this->hasColumn('admin_field_idioma', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '255',
             ));
        $this->hasColumn('admin_field_estudios', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('provincia_id', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('ciudad_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('admin_field_fecha_ingreso', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('admin_field_fecha_egreso', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('admin_field_fecha_nacimiento', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('admin_field_fechahora_ultimo_login', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('admin_field_fechahora_ultima_actividad', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('sucursal_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('admin_estado_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('admin_field_super_admin', 'enum', 1, array(
             'type' => 'enum',
             'fixed' => 0,
             'unsigned' => false,
             'values' => 
             array(
              0 => '0',
              1 => '1',
             ),
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('token', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '255',
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('deleted_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '25',
             ));


        $this->index('admin_field_usuario', array(
             'fields' => 
             array(
              0 => 'admin_field_usuario',
             ),
             'type' => 'fulltext',
             ));
        $this->index('admin_field_nombre', array(
             'fields' => 
             array(
              0 => 'admin_field_nombre',
             ),
             'type' => 'fulltext',
             ));
        $this->index('admin_field_apellido', array(
             'fields' => 
             array(
              0 => 'admin_field_apellido',
             ),
             'type' => 'fulltext',
             ));
        $this->index('admin_field_email', array(
             'fields' => 
             array(
              0 => 'admin_field_email',
             ),
             'type' => 'fulltext',
             ));
        $this->index('admin_field_telefono_celular', array(
             'fields' => 
             array(
              0 => 'admin_field_telefono_celular',
             ),
             'type' => 'fulltext',
             ));
        $this->index('admin_field_dni', array(
             'fields' => 
             array(
              0 => 'admin_field_dni',
             ),
             'type' => 'fulltext',
             ));
        $this->option('type', 'MYISAM');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Provincia', array(
             'local' => 'provincia_id',
             'foreign' => 'id'));

        $this->hasOne('Ciudad', array(
             'local' => 'ciudad_id',
             'foreign' => 'id'));

        $this->hasMany('Boutique_Producto', array(
             'local' => 'id',
             'foreign' => 'admin_id'));

        $this->hasMany('Comunicacion_Evento', array(
             'local' => 'id',
             'foreign' => 'comunicacion_evento_field_admin_modifica_id'));

        $this->hasMany('Comunicacion_Multimedia', array(
             'local' => 'id',
             'foreign' => 'comunicacion_multimedia_field_admin_modifica_id'));

        $this->hasMany('Comunicacion_Folleto', array(
             'local' => 'id',
             'foreign' => 'comunicacion_folleto_field_admin_modifica_id'));

        $this->hasMany('Comunicacion_Logo', array(
             'local' => 'id',
             'foreign' => 'comunicacion_logo_field_admin_modifica_id'));

        $this->hasMany('Comunicacion_Aviso', array(
             'local' => 'id',
             'foreign' => 'comunicacion_aviso_field_admin_modifica_id'));

        $this->hasMany('Comunicacion_Papeleria', array(
             'local' => 'id',
             'foreign' => 'comunicacion_papeleria_field_admin_modifica_id'));

        $this->hasOne('Tsi_Promocion', array(
             'local' => 'tsi_promocion_field_admin_alta_id',
             'foreign' => 'id'));
    }
}