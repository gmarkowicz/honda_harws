<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Unidad', 'harws2');

/**
 * BaseUnidad
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $unidad_field_unidad
 * @property string $unidad_field_vin
 * @property string $unidad_field_motor
 * @property string $unidad_field_codigo_de_llave
 * @property string $unidad_field_codigo_de_radio
 * @property string $unidad_field_patente
 * @property integer $unidad_field_kilometros
 * @property string $unidad_field_oblea
 * @property string $unidad_field_certificado
 * @property string $unidad_field_formulario_12
 * @property string $unidad_field_formulario_01
 * @property string $unidad_field_material_sap
 * @property string $unidad_field_descripcion_sap
 * @property date $unidad_field_fecha_garantia_vencida
 * @property date $unidad_field_fecha_facturacion
 * @property date $unidad_field_fecha_alta_sap
 * @property date $unidad_field_fecha_venta
 * @property date $unidad_field_fecha_entrega
 * @property date $unidad_field_fecha_garantia_anulada
 * @property string $unidad_field_motivo_garantia_anulada
 * @property string $unidad_color_exterior_id
 * @property string $unidad_color_interior_id
 * @property string $vin_procedencia_ktype_id
 * @property integer $sucursal_id
 * @property integer $empresa_id
 * @property integer $auto_fabrica_id
 * @property integer $auto_version_id
 * @property integer $auto_puerta_cantidad_id
 * @property integer $auto_transmision_id
 * @property integer $auto_combustible_id
 * @property integer $auto_anio_id
 * @property integer $unidad_estado_id
 * @property integer $unidad_estado_garantia_id
 * @property enum $unidad_field_fixed
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property timestamp $deleted_at
 * @property Doctrine_Collection $Reclamo_Garantia_Campania_Unidad
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUnidad extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('unidad');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('unidad_field_unidad', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('unidad_field_vin', 'string', 17, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '17',
             ));
        $this->hasColumn('unidad_field_motor', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '30',
             ));
        $this->hasColumn('unidad_field_codigo_de_llave', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '30',
             ));
        $this->hasColumn('unidad_field_codigo_de_radio', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '30',
             ));
        $this->hasColumn('unidad_field_patente', 'string', 7, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '7',
             ));
        $this->hasColumn('unidad_field_kilometros', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('unidad_field_oblea', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '50',
             ));
        $this->hasColumn('unidad_field_certificado', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '255',
             ));
        $this->hasColumn('unidad_field_formulario_12', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '255',
             ));
        $this->hasColumn('unidad_field_formulario_01', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '255',
             ));
        $this->hasColumn('unidad_field_material_sap', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '50',
             ));
        $this->hasColumn('unidad_field_descripcion_sap', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '100',
             ));
        $this->hasColumn('unidad_field_fecha_garantia_vencida', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('unidad_field_fecha_facturacion', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('unidad_field_fecha_alta_sap', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('unidad_field_fecha_venta', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('unidad_field_fecha_entrega', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('unidad_field_fecha_garantia_anulada', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('unidad_field_motivo_garantia_anulada', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('unidad_color_exterior_id', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '30',
             ));
        $this->hasColumn('unidad_color_interior_id', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '30',
             ));
        $this->hasColumn('vin_procedencia_ktype_id', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('sucursal_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('empresa_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('auto_fabrica_id', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('auto_version_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('auto_puerta_cantidad_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('auto_transmision_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('auto_combustible_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('auto_anio_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('unidad_estado_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('unidad_estado_garantia_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('unidad_field_fixed', 'enum', 1, array(
             'type' => 'enum',
             'fixed' => 0,
             'unsigned' => false,
             'values' => 
             array(
              0 => '0',
              1 => '1',
             ),
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('deleted_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '25',
             ));


        $this->index('unidad_field_unidad', array(
             'fields' => 
             array(
              0 => 'unidad_field_unidad',
             ),
             'type' => 'fulltext',
             ));
        $this->index('unidad_field_vin', array(
             'fields' => 
             array(
              0 => 'unidad_field_vin',
             ),
             'type' => 'fulltext',
             ));
        $this->index('unidad_field_motor', array(
             'fields' => 
             array(
              0 => 'unidad_field_motor',
             ),
             'type' => 'fulltext',
             ));
        $this->index('unidad_field_codigo_de_llave', array(
             'fields' => 
             array(
              0 => 'unidad_field_codigo_de_llave',
             ),
             'type' => 'fulltext',
             ));
        $this->index('unidad_field_codigo_de_radio', array(
             'fields' => 
             array(
              0 => 'unidad_field_codigo_de_radio',
             ),
             'type' => 'fulltext',
             ));
        $this->index('unidad_field_patente', array(
             'fields' => 
             array(
              0 => 'unidad_field_patente',
             ),
             'type' => 'fulltext',
             ));
        $this->index('unidad_field_oblea', array(
             'fields' => 
             array(
              0 => 'unidad_field_oblea',
             ),
             'type' => 'fulltext',
             ));
        $this->index('unidad_field_certificado', array(
             'fields' => 
             array(
              0 => 'unidad_field_certificado',
             ),
             'type' => 'fulltext',
             ));
        $this->index('unidad_field_formulario_12', array(
             'fields' => 
             array(
              0 => 'unidad_field_formulario_12',
             ),
             'type' => 'fulltext',
             ));
        $this->index('unidad_field_formulario_01', array(
             'fields' => 
             array(
              0 => 'unidad_field_formulario_01',
             ),
             'type' => 'fulltext',
             ));
        $this->index('unidad_field_material_sap', array(
             'fields' => 
             array(
              0 => 'unidad_field_material_sap',
             ),
             'type' => 'fulltext',
             ));
        $this->index('unidad_field_descripcion_sap', array(
             'fields' => 
             array(
              0 => 'unidad_field_descripcion_sap',
             ),
             'type' => 'fulltext',
             ));
        $this->index('unidad_field_motivo_garantia_anulada', array(
             'fields' => 
             array(
              0 => 'unidad_field_motivo_garantia_anulada',
             ),
             'type' => 'fulltext',
             ));
        $this->option('type', 'MYISAM');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Reclamo_Garantia_Campania_Unidad', array(
             'local' => 'id',
             'foreign' => 'unidad_field_vin'));
    }
}