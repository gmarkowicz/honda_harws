<?php

/**
 * Unidad
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    Honda_HARWS
 * @subpackage Doctrine
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Unidad.php 97 2012-08-01 21:57:04Z mprado $
 */
class Unidad extends BaseUnidad
{
    public function setUp() { 
	
        $this->actAs('Timestampable');
	$this->actAs('SoftDelete');
		
		
	$this->hasOne('Sucursal', array(
            'local' => 'sucursal_id',
            'foreign' => 'id'
            ));
		
	$this->hasOne('Empresa', array(
            'local' => 'empresa_id',
            'foreign' => 'id'
            ));		
		
	$this->hasOne('Unidad_Estado', array(
            'local' => 'unidad_estado_id',
            'foreign' => 'id'
            ));
		
	$this->hasOne('Unidad_Color_Exterior', array(
            'local' => 'unidad_color_exterior_id',
            'foreign' => 'id'
            ));
		
	$this->hasOne('Unidad_Color_Interior', array(
            'local' => 'unidad_color_interior_id',
            'foreign' => 'id'
            ));
		
	$this->hasOne('Vin_Procedencia_Ktype', array(
            'local' => 'vin_procedencia_ktype_id',
            'foreign' => 'id'
            ));
		
	$this->hasOne('Auto_Fabrica', array(
            'local' => 'auto_fabrica_id',
            'foreign' => 'id'
            ));		
		
	$this->hasOne('Auto_Version', array(
            'local' => 'auto_version_id',
            'foreign' => 'id'
            ));
		
	$this->hasOne('Auto_Puerta_Cantidad', array(
            'local' => 'auto_puerta_cantidad_id',
            'foreign' => 'id'
            ));
		
	$this->hasOne('Auto_Transmision', array(
            'local' => 'auto_transmision_id',
            'foreign' => 'id'
            ));
		
	$this->hasOne('Auto_Combustible', array(
            'local' => 'auto_combustible_id',
            'foreign' => 'id'
            ));
		
	$this->hasOne('Auto_Anio', array(
            'local' => 'auto_anio_id',
            'foreign' => 'id'
            ));
		
	$this->hasOne('Unidad_Estado_Garantia', array(
            'local' => 'unidad_estado_garantia_id',
            'foreign' => 'id'
            ));
		
	$this->hasMany('Unidad_Codigo_Interno as Many_Unidad_Codigo_Interno', array(
            'refClass' => 'Unidad_M_Unidad_Codigo_interno',
            'local' => 'unidad_id',
            'foreign' => 'unidad_codigo_interno_id'
            ));
	
        $this->hasMany('Tarjeta_Garantia', array(
            'local' => 'id',
            'foreign' => 'unidad_id'
            ));
		
	$this->hasMany('Tsi', array(
            'local' => 'id',
            'foreign' => 'unidad_id'
            ));
		
	$this->hasMany('Usado', array(
            'local' => 'unidad_id',
            'foreign' => 'id'
            ));
		
	$this->hasMany('Usado as Usado_Unidad_Entregada', array(
            'local' => 'unidad_entregada_id',
            'foreign' => 'id'
            ));
		
	$this->hasMany('Libro_Servicio', array(
            'local' => 'unidad_id',
            'foreign' => 'id'
            ));
		
	$this->hasMany('Codigo_Radio_Solicitud', array(
            'local' => 'unidad_id',
            'foreign' => 'id'
            ));		
    }	
	
    public function get_all()
    {

        $query = Doctrine_Query::create();
        $query->from(get_class($this) . ' UNIDAD');
        $query->addSelect	('UNIDAD.*');
        $query->leftJoin('UNIDAD.Vin_Procedencia_Ktype VP ');
        $query->addSelect	('VP.*');
        $query->leftJoin('UNIDAD.Auto_Version AV');
        $query->addSelect	('AV.*');
        $query->leftJoin('AV.Auto_Modelo AM ON AV.auto_modelo_id = AM.id');
        $query->addSelect	('AM.*');
        $query->leftJoin('AM.Auto_Marca AMARCA ON AM.auto_marca_id = AMARCA.id');
        $query->addSelect	('AMARCA.*');
        $query->leftJoin('UNIDAD.Unidad_Color_Exterior CE ');
        $query->addSelect	('CE.*');
        $query->leftJoin('UNIDAD.Unidad_Color_Interior CI ');
        $query->addSelect	('CI.*');
        $query->leftJoin('UNIDAD.Auto_Fabrica AF ');
        $query->addSelect	('AF.*');
        $query->leftJoin('UNIDAD.Auto_Anio AA ');
        $query->addSelect	('AA.*');
        $query->leftJoin('UNIDAD.Auto_Transmision AT ');
        $query->addSelect	('AT.*');
        $query->leftJoin('UNIDAD.Auto_Puerta_Cantidad PC ');
        $query->addSelect	('PC.*');
        $query->leftJoin('UNIDAD.Auto_Combustible AC ');
        $query->addSelect	('AC.*');
        $query->leftJoin('UNIDAD.Unidad_Estado_Garantia UNIDAD_ESTADO_GARANTIA');
        $query->addSelect	('UNIDAD_ESTADO_GARANTIA.*');
        $query->leftJoin('UNIDAD.Unidad_Estado UNIDAD_ESTADO');
        $query->addSelect	('UNIDAD_ESTADO.*');
        $query->leftJoin('UNIDAD.Many_Unidad_Codigo_Interno MANY_UNIDAD_CODIGO_INTERNO ');
        $query->addSelect	('MANY_UNIDAD_CODIGO_INTERNO.*');
        /*mysql only*/
        $query->addSelect	("period_diff( date_format(now(), '%Y%m'), date_format(UNIDAD.unidad_field_fecha_entrega, '%Y%m')) as unidad_field_edad_meses");

        $query->where("1 = 1");
        //$query->whereIn("1 = 1");

        return $query;
    }
	
	
    public function get_deuda()
    {
        $query = $this->get_all();
        $query->leftJoin('UNIDAD.Tarjeta_Garantia TG ');
        $query->addSelect('TG.*');
        $query->leftJoin('UNIDAD.Sucursal SUCURSAL ');
        $query->addSelect('SUCURSAL.*');
        $query->addWhere("UNIDAD.unidad_estado_id = ?",2); //Vendido concesionario
        $query->addWhere("UNIDAD.sucursal_id IS NOT NULL");
        $query->addWhere("UNIDAD.sucursal_id != ?",'');
        $query->addWhere("TG.id IS NULL");


        return $query;
    }
	
	
    public function get_archivo_japon()
    {
        $query = Doctrine_Query::create();
        $query->from(get_class($this) . ' UNIDAD');
        $query->leftJoin('UNIDAD.Sucursal SUCURSAL ');
        $query->leftJoin('SUCURSAL.Provincia PROVINCIA ');
        $query->leftJoin('SUCURSAL.Empresa EMPRESA ');
        $query->leftJoin('UNIDAD.Auto_Anio AUTO_ANIO ');
        $query->leftJoin('UNIDAD.Tarjeta_Garantia TARJETA_GARANTIA ');

        $query->where("1 = 1");
        $query->addWhere('TARJETA_GARANTIA.tarjeta_garantia_field_fecha_entrega = UNIDAD.unidad_field_fecha_entrega');
        $query->addWhere('TARJETA_GARANTIA.tarjeta_garantia_estado_id < ?',3); //activa o inactiva, 
        $query->orderBy('UNIDAD.unidad_field_fecha_entrega');
        $query->addOrderBy('UNIDAD.unidad_field_vin');

        return $query;
    }	
	
    //TODO: esto tiene que estar en una funcion o en un listener!
    public function postUpdate(Doctrine_Event $event)
    {
       	$manager = Doctrine_Manager::getInstance();
        $cacheDriver = $manager->getAttribute(Doctrine_Core::ATTR_RESULT_CACHE);
        $cacheDriver->deleteByPrefix(strtolower(get_class($this)));
    }
    public function postInsert(Doctrine_Event $event)
    {
       	$manager = Doctrine_Manager::getInstance();
        $cacheDriver = $manager->getAttribute(Doctrine_Core::ATTR_RESULT_CACHE);
        $cacheDriver->deleteByPrefix(strtolower(get_class($this)));
    }
}